{"version":3,"file":"ngx-image-compress.umd.js.map","sources":["ng://ngx-image-compress/lib/image-compress.ts","ng://ngx-image-compress/lib/ngx-image-compress.service.ts"],"sourcesContent":["import {Renderer2} from '@angular/core';\n\nexport enum DOC_ORIENTATION {\n  Up = 1,\n  Down = 3,\n  Right = 6,\n  Left = 8,\n  UpMirrored = 2,\n  DownMirrored = 4,\n  LeftMirrored = 5,\n  RightMirrored = 7,\n  NotJpeg = -1,\n  NotDefined = -2\n}\n\n\nexport class ImageCompress {\n\n\n  /**\n   * Get the correct Orientation value from tags, in order to write correctly in our canvas\n   */\n  static getOrientation(file: File, callback: (result: DOC_ORIENTATION) => void) {\n    const reader = new FileReader();\n    try {\n      reader.onload = function ($event) {\n        const view = new DataView(reader.result as ArrayBuffer);\n        if (view.getUint16(0, false) !== 0xFFD8) { return callback(-2); }\n        const length = view.byteLength;\n        let offset = 2;\n        while (offset < length) {\n          const marker = view.getUint16(offset, false);\n          offset += 2;\n          if (marker === 0xFFE1) {\n            if (view.getUint32(offset += 2, false) !== 0x45786966) { return callback(-1); }\n            const little = view.getUint16(offset += 6, false) === 0x4949;\n            offset += view.getUint32(offset + 4, little);\n            const tags = view.getUint16(offset, little);\n            offset += 2;\n            for (let i = 0; i < tags; i++) {\n              if (view.getUint16(offset + (i * 12), little) === 0x0112) {\n                return callback(view.getUint16(offset + (i * 12) + 8, little));\n              }\n            }\n          } else if ((marker & 0xFF00) !== 0xFF00) { break; } else { offset += view.getUint16(offset, false); }\n        }\n        return callback(-1);\n      };\n      reader.readAsArrayBuffer(file);\n    } catch (e) {\n      return callback(0);\n    }\n\n  }\n\n\n  /**\n   * return a promise with the new image data and image orientation\n   */\n  static uploadFile(render: Renderer2):Promise<{image: string, orientation: DOC_ORIENTATION}> {\n\n    const promise: Promise<{image: string, orientation: DOC_ORIENTATION}> = new Promise(function(resolve, reject) {\n\n      const inputElement = render.createElement('input');\n      render.setStyle(inputElement, 'display', 'none');\n      render.setProperty(inputElement, 'type', 'file');\n\n      render.listen(inputElement, 'click', ($event) => {\n        //console.log('MouseEvent:', $event);\n        //console.log('Input:', $event.target);\n        $event.target.value = null;\n      });\n\n\n      render.listen(inputElement, 'change', ($event) => {\n        const file: File = $event.target.files[0];\n\n        const myReader: FileReader = new FileReader();\n\n        myReader.onloadend = (e) => {\n          try {\n            ImageCompress.getOrientation(file, orientation => {\n              resolve({image:myReader.result as string, orientation});\n            });\n          } catch (e) {\n            //console.log(`ngx-image-compress error ${e}`);\n            reject(e);\n          }\n        };\n\n        try {\n          myReader.readAsDataURL(file);\n        } catch (e) {\n          console.warn(`ngx-image-compress - probably no file have been selected: ${e}`);\n          reject(\"No file selected\");\n        }\n\n      });\n      inputElement.click();\n\n    });\n\n    return promise;\n  }\n\n\n  static compress(imageDataUrlSource: string,\n                  orientation: DOC_ORIENTATION,\n                  render: Renderer2,\n                  ratio: number = 50,\n                  quality: number = 50): Promise<string> {\n\n    const promise: Promise<string> = new Promise(function(resolve, reject) {\n\n      quality = quality / 100;\n      ratio = ratio / 100;\n      const sourceImage = new Image();\n\n      // important for safari: we need to wait for onload event\n      sourceImage.onload = function () {\n        const canvas: HTMLCanvasElement = render.createElement('canvas');\n        const ctx: CanvasRenderingContext2D = canvas.getContext('2d');\n\n        let w, h;\n        w = sourceImage.naturalWidth;\n        h = sourceImage.naturalHeight;\n\n        if (orientation === DOC_ORIENTATION.Right || orientation === DOC_ORIENTATION.Left) {\n          const t = w;\n          w = h;\n          h = t;\n        }\n\n        canvas.width = w * ratio;\n        canvas.height = h * ratio;\n\n\n        const TO_RADIANS = Math.PI / 180;\n\n        if (orientation === DOC_ORIENTATION.Up) {\n\n          ctx.drawImage(sourceImage, 0, 0, canvas.width, canvas.height);\n\n        } else if (orientation === DOC_ORIENTATION.Right) {\n\n          ctx.save();\n          ctx.rotate(90 * TO_RADIANS);\n          ctx.translate(0, -canvas.width);\n          ctx.drawImage(sourceImage, 0, 0, canvas.height, canvas.width);\n          ctx.restore();\n\n        } else if (orientation === DOC_ORIENTATION.Left) {\n\n          ctx.save();\n          ctx.rotate(-90 * TO_RADIANS);\n          ctx.translate(-canvas.width, 0);\n          ctx.drawImage(sourceImage, 0, 0, canvas.height, canvas.width);\n          ctx.restore();\n\n        } else if (orientation === DOC_ORIENTATION.Down) {\n\n          ctx.save();\n          ctx.rotate(180 * TO_RADIANS);\n          ctx.translate(-canvas.width, -canvas.height);\n          ctx.drawImage(sourceImage, 0, 0, canvas.width, canvas.height);\n          ctx.restore();\n\n        } else {\n          console.warn('ngx-image-compress - no orientation value found');\n          // same as default UP\n          ctx.drawImage(sourceImage, 0, 0, canvas.width, canvas.height);\n        }\n\n\n        const mime = imageDataUrlSource.substr(5, imageDataUrlSource.split(';')[0].length - 5);\n        // TODO test on mime\n        const result = canvas.toDataURL(mime, quality);\n\n        resolve(result);\n\n      };\n\n      sourceImage.src = imageDataUrlSource;\n\n    });\n\n    return promise;\n  }\n\n\n  /**\n   * helper to evaluate the compression rate\n   * @param s the image in base64 string format\n   */\n  static byteCount(s: string): number {\n    return encodeURI(s).split(/%..|./).length - 1;\n  }\n\n}\n","import {Injectable, Renderer2, RendererFactory2} from '@angular/core';\nimport {DOC_ORIENTATION, ImageCompress} from './image-compress';\n\n@Injectable()\nexport class NgxImageCompressService {\n\n  private render: Renderer2;\n\n  public DOC_ORIENTATION = DOC_ORIENTATION;\n\n  constructor(rendererFactory: RendererFactory2) {\n    this.render = rendererFactory.createRenderer(null, null);\n  }\n\n  public byteCount(image) {\n    return ImageCompress.byteCount(image);\n  }\n\n  public uploadFile():Promise<{image: string, orientation: DOC_ORIENTATION}> {\n    return ImageCompress.uploadFile(this.render);\n  }\n\n  public compressFile(image, orientation, ratio: number = 50, quality: number = 50): Promise<string> {\n    return ImageCompress.compress(image, orientation, this.render, ratio, quality);\n  }\n\n}\n"],"names":["Injectable","RendererFactory2"],"mappings":"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"}
