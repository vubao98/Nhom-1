import { ElementRef, EventEmitter, OnChanges, SimpleChange } from '@angular/core';
export interface CropperPosition {
    x1: number;
    y1: number;
    x2: number;
    y2: number;
}
export declare class ImageCropperComponent implements OnChanges {
    private elementRef;
    private originalImage;
    private croppedImage;
    private moveStart;
    private maxSize;
    private originalSize;
    imgDataUrl: string;
    imageVisible: boolean;
    imageChangedEvent: any;
    imageBase64: string;
    format: 'png' | 'jpeg' | 'bmp' | 'webp' | 'ico';
    maintainAspectRatio: boolean;
    aspectRatio: number;
    resizeToWidth: number;
    cropper: CropperPosition;
    imageCropped: EventEmitter<string>;
    imageLoaded: EventEmitter<void>;
    loadImageFailed: EventEmitter<void>;
    constructor(elementRef: ElementRef);
    ngOnChanges(changes: {
        [propertyName: string]: SimpleChange;
    }): void;
    private initCropper();
    loadImage(event: any): void;
    private loadBase64Image(imageBase64);
    imageLoadedInView(): void;
    private resetCropperPosition();
    startMove(event: any, moveType: string, position?: string | null): void;
    moveImg(event: any): void;
    private setMaxSize();
    private checkCropperPosition(maintainSize?);
    moveStop(): void;
    private move(event);
    private resize(event);
    private checkAspectRatio();
    private crop();
    private getClientX(event);
    private getClientY(event);
}
